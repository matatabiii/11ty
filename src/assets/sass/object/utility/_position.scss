/*////////////////////////////

@utility/position

position

////////////////////////////*/
// 【必須】variable, functions, mixins 読み込み
@use '../../foundation/vars/variable' as *;
@use '../../foundation/vars/functions' as *;
@use '../../foundation/vars/mixins' as *;

@mixin _position($prefix: "") {
  .#{$prefix}u-relative {
    position: relative;
  }
  .#{$prefix}u-absolute {
    position: absolute;
  }
  .#{$prefix}u-sticky {
    position: sticky;
  }
  @for $i from 0 through 20 {
    .#{$prefix}u-top#{$i} { top: rem($i); }
    .#{$prefix}u-bottom#{$i} { bottom: rem($i); }
    .#{$prefix}u-right#{$i} { right: rem($i); }
    .#{$prefix}u-left#{$i} { left: rem($i); }

    @if $i != 0 {
      .#{$prefix}u-_top#{$i} { top: rem(-$i); }
      .#{$prefix}u-_right#{$i} { right: rem(-$i); }
      .#{$prefix}u-_bottom#{$i} { bottom: rem(-$i); }
      .#{$prefix}u-_left#{$i} { left: rem(-$i); }
    }
  }
  .#{$prefix}u-top-100p { top: 100%; }
  .#{$prefix}u-right-100p { right: 100%; }
  .#{$prefix}u-bottom-100p { bottom: 100%; }
  .#{$prefix}u-left-100p { left: 100%; }
}

@include _position();

@each $screen in $screen-list-min {
  $prefix: str-slice($screen, 0, 1);

  // $prefixBreak: "#{$prefix}\\:";
  // @include break($screen) {
  // }

  $prefixOver: "#{to-upper-case($prefix)}\\:";
  @include over($screen) {
    @include _position($prefixOver);
  }
}
