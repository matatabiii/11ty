/*////////////////////////////

@layout/trigger-drawer
ハンバーガーメニュー

////////////////////////////*/
@use "sass:map"; // sassの機能
// 【必須】variable, functions, mixins 読み込み
@use '../foundation/vars/variable' as *;
@use '../foundation/vars/functions' as *;
@use '../foundation/vars/mixins' as *;

// https://github.com/dmnsgn/sass-easing/blob/master/_easings.scss
@use "./../../../../node_modules/sass-easing/_easings.scss" as *;

$width: map.get($trigger-style, "width");
$height: map.get($trigger-style, "height");
$trigger-radius: map.get($trigger-style, "trigger-radius");
$border: map.get($trigger-style, "border");
$border-color: map.get($trigger-style, "border-color");

$open-bg-color: map.get($trigger-style, "open-bg-color");
$open-line-color: map.get($trigger-style, "open-line-color");
$open-label-color: map.get($trigger-style, "open-label-color");

$close-bg-color: map.get($trigger-style, "close-bg-color");
$close-line-color: map.get($trigger-style, "close-line-color");
$close-label-color: map.get($trigger-style, "close-label-color");

$line-width: map.get($trigger-style, "line-width");
$line-height: map.get($trigger-style, "line-height");
$line-radius: map.get($trigger-style, "line-radius");
$line-space: map.get($trigger-style, "line-space");
$calced-line-space: $line-height + $line-space;

$label-size: map.get($trigger-style, "label-size");

/*! purgecss start ignore */

button.l-trigger:focus {
  outline: none;
}
.l-trigger {
  outline: none;
  position: fixed;
  z-index: z-index("trigger");
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: $trigger-radius;

  top: 0;
  right: 0;
  width: $width;
  height: $height;
  background: $close-bg-color;
  color: $close-line-color;
  transition: color 0.4s $easeInOutCubic, background 0.4s $easeInOutCubic, transform 0.4s ease-in-out;

  @include over("lg") {
    width: height("header-desktop");
    height: height("header-desktop");
  }

  @include action("hover") {
    background: rgba(color("text"), 0.8);
  }

  // 3本ライン .l-trigger__u
  &__u {
    display: block;
    width: $line-width;
    height: $line-height;
    background: currentColor;
    border-radius: $line-radius;
    position: relative;
    margin: 5px auto $calced-line-space auto;
    transition: background 0.4s $easeInOutCubic,
                transform 0.4s $easeInOutCubic 0.2s;
    // transform: translate3d(-5px, 0, 0);
    // transition: transform 0.4s $easeInOutQuint;

    &::before,
    &::after {
      content: "";
      display: block;
      width: $line-width;
      height: $line-height;
      position: absolute;
      background: currentColor;
      border-radius: $line-radius;
      transform-origin: center center;
      // transform: translate3d(10px, 0, 0);
    }

    &::before {
      bottom: $calced-line-space;
      transition: transform 0.4s $easeInOutQuint, bottom 0.4s $easeInOutQuint 0.2s, right 0.4s $easeInOutQuint 0.2s;
    }

    &::after {
      top: $calced-line-space;
      transition: transform 0.4s $easeInOutQuint, top 0.4s $easeInOutQuint 0.2s, left 0.4s $easeInOutQuint 0.2s;
    }
  }

  // ラベル .l-trigger__label
  &__label {
    order: 1;
    display: block;
    font-size: 14px;
    margin-top: em(10, 14);
    margin-bottom: em(-10, 14);
    color: $close-label-color;
  }

  // Open
  @include isAriaExpanded() {
    color: $open-line-color;
    background: $open-bg-color;
    transform: translate3d(0, 0, 0);
    transition: background 0.4s $easeInOutCubic,
                transform 0.4s $easeInOutCubic;
    outline: none;

    // 3本ライン
    .l-trigger__u {
      background: transparent;
      transform: translate3d(0, 0, 0);
      // transition: transform 0.4s $easeInOutQuint 0.2s;

      &::before {
        bottom: 0;
        right: 0;
        transform: translate3d(0, 0, 0) rotate(45deg);
        transition: transform 0.4s $easeInOutQuint 0.2s, bottom 0.4s $easeInOutQuint, right 0.4s $easeInOutQuint;
      }

      &::after {
        top: 0;
        left: 0;
        transform: translate3d(0, 0, 0) rotate(-45deg);
        transition: transform 0.4s $easeInOutQuint 0.2s, top 0.4s $easeInOutQuint, left 0.4s $easeInOutQuint;
      }
    }

    // ラベル
    .l-trigger__label {
      color: $open-label-color;
    }
  }
}

/*////////////////////////////

@layout/trigger-drawer
Drawer

////////////////////////////*/
// @include break("lg") {
  .l-drawer-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(color("black"), 0.1);
    z-index: -1;
    visibility: hidden;

    .is-open-drawer & {
      // メニュー外クリックで閉じる
      z-index: 5;
      visibility: visible;
    }
  }

  [data-logic="drawer"] {
    position: fixed;
    top: 0;
    right: 0;
    max-width: 100%;
    // left: 0;
    width: 100%;
    height: 100%;
    z-index: z-index("drawer");
    display: flex;
    flex-direction: column;
    pointer-events: none;

    // Open/Close判定
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.3s ease-in-out 0.5s, visibility 0.3s ease-in-out 0.5s;

    @include isAriaExpanded() {
      pointer-events: auto;
      opacity: 1;
      visibility: visible;
      transition: opacity 0.3s ease-in-out 0s, visibility 0.3s ease-in-out 0s;

      &::before {
        opacity: 0.85;
        visibility: visible;
        width: 100%;
        transition: opacity 0.3s ease-in-out 0s, width 0.3s ease-in-out 0s, visibility 0.3s ease-in-out 0s;
      }

      [data-logic="drawer-scroll"] {
        -webkit-overflow-scrolling: touch;
      }

      [data-logic="drawer-container"] {
        opacity: 1;
        visibility: visible;
        transform: translate3d(0, 0, 0);
        transition: transform 0.3s ease-in-out 0.3s, opacity 0.3s ease-in-out 0.3s, visibility 0.3s ease-in-out 0.3s;
      }
    }

    &::before {
      content: "";
      position: absolute;
      top: 0;
      // left: 0;
      right: 0;
      width: 100%;
      height: 100%;
      opacity: 0.85;
      background: color("black");
      z-index: -1;

      // Open/Close判定
      visibility: hidden;
      opacity: 0;
      // width: 0;
      transition: opacity 0.3s ease-in-out 0s, width 0.3s ease-in-out 0s, visibility 0.3s ease-in-out 0.15s;
    }
  }

  [data-logic="drawer-scroll"] {
    padding: height("header-sp") + 20 0 height("header-sp") + 20 0;
    margin: 0 0 10px 0;
    flex: 1 1 auto;
    overflow-y: auto;
    height: 100%;
    display: flex;
    flex-direction: column;

    a,
    button {
      outline: none;
    }
  }

  [data-logic="drawer-container"] {
    flex: 0 0 auto;
    width: 100%;
    max-width: 100%;
    min-height: 100%;
    // margin: 0 0 0 auto;
    padding: 5px 0;

    // Open/Close判定
    visibility: hidden;
    opacity: 0;
    transform: translate3d(0, -10px, 0);
    transition: transform 0.1s ease-in-out 0s, opacity 0.1s ease-in-out 0s, visibility 0.1s ease-in-out 0s;
  }

  // 案件ごとに変更する記述
  [data-logic="drawer"] {
    // width: 600px;
    // max-width: calc(100% - 40px);
  }
  [data-logic="drawer-scroll"] {
  }
  [data-logic="drawer-container"] {
    display: flex;
    flex-direction: column;
    width: rem(777);
    // padding-left: rem(20);
    // padding-right: rem(20);
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
  }
// }


/*! purgecss end ignore */
